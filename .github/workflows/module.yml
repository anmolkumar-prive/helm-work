name: Release Helm Chart

on:
  pull_request:
    branches: [main]
  pull_request_target:
    types: [closed]

permissions:
  contents: write
  pull-requests: write

env:
  HELM_VERSION: 3.10.0

jobs:
  # 1Ô∏è‚É£ Detect changed Helm charts
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.changed.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: changed
        run: |
          echo "üîç Detecting changed Helm charts..."
          if [ "${{ github.event_name }}" == "pull_request_target" ]; then
            CHANGED_FILES=$(git diff --name-only HEAD^1...HEAD)
          else
            CHANGED_FILES=$(git diff --name-only origin/main...HEAD)
          fi

          MATRIX=""
          for file in $CHANGED_FILES; do
            dir=$(dirname "$file")
            if [ -f "$dir/Chart.yaml" ]; then
              module_name=$(echo "$dir" | tr '/' '_')
              MATRIX+="{\"module_name\": \"$module_name\", \"module_path\": \"$dir\"},"
            fi
          done

          if [ -z "$MATRIX" ]; then
            echo "matrix={\"include\":[]}" >> $GITHUB_OUTPUT
          else
            MATRIX="{\"include\":[$(echo "$MATRIX" | sed 's/,$//')]}"
            echo "matrix=$MATRIX" >> $GITHUB_OUTPUT
          fi

  # 2Ô∏è‚É£ In PR ‚Äî Package and preview chart
  verify-and-comment:
    name: Verify & Preview Helm Chart
    needs: generate-matrix
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - uses: azure/setup-helm@v4
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Package Helm chart (PR preview)
        run: |
          mkdir -p ${{ matrix.module_path }}/packages
          helm lint "${{ matrix.module_path }}"

          # Merge old index if exists
          if [ -f "${{ matrix.module_path }}/index.yaml" ]; then
            cp "${{ matrix.module_path }}/index.yaml" old-index.yaml
          fi

          helm package "${{ matrix.module_path }}" --destination ${{ matrix.module_path }}/packages
          helm repo index ${{ matrix.module_path }}/packages --merge old-index.yaml || helm repo index ${{ matrix.module_path }}/packages

          mv ${{ matrix.module_path }}/packages/*.tgz ${{ matrix.module_path }}/
          mv ${{ matrix.module_path }}/packages/index.yaml ${{ matrix.module_path }}/

      - name: Commit updated package & index (PR preview)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add ${{ matrix.module_path }}/index.yaml ${{ matrix.module_path }}/*.tgz
          if ! git diff --cached --quiet; then
            git commit -m "Preview: update Helm package for ${{ matrix.module_name }}"
            git push origin HEAD:${{ github.head_ref }}
          fi

      - name: Comment version change
        run: |
          old_ver=$(git show origin/main:"${{ matrix.module_path }}/Chart.yaml" 2>/dev/null | grep '^version:' | awk '{print $2}')
          new_ver=$(grep '^version:' "${{ matrix.module_path }}/Chart.yaml" | awk '{print $2}')
          echo "| Chart | Old | New |" > comment.txt
          echo "|-------|------|-----|" >> comment.txt
          echo "| ${{ matrix.module_name }} | ${old_ver:-N/A} | $new_ver |" >> comment.txt

      - uses: thollander/actions-comment-pull-request@24bffb9b452ba05a4f3f77933840a6a841d1b32b
        with:
          file-path: comment.txt
          comment-tag: helm_version_check
          mode: recreate

  # 3Ô∏è‚É£ After merge ‚Äî Final release and tag
  release-and-tag:
    name: Release Helm Chart
    needs: generate-matrix
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request_target' && github.event.pull_request.merged == true
    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - uses: azure/setup-helm@v4
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Package and merge chart for release
        run: |
          mkdir -p ${{ matrix.module_path }}/packages

          if [ -f "${{ matrix.module_path }}/index.yaml" ]; then
            cp "${{ matrix.module_path }}/index.yaml" old-index.yaml
          fi

          helm package "${{ matrix.module_path }}" --destination ${{ matrix.module_path }}/packages
          helm repo index ${{ matrix.module_path }}/packages --merge old-index.yaml || helm repo index ${{ matrix.module_path }}/packages

          mv ${{ matrix.module_path }}/packages/*.tgz ${{ matrix.module_path }}/
          mv ${{ matrix.module_path }}/packages/index.yaml ${{ matrix.module_path }}/

      - name: Commit updated charts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add ${{ matrix.module_path }}/index.yaml ${{ matrix.module_path }}/*.tgz
          if ! git diff --cached --quiet; then
            git commit -m "Release: update Helm package for ${{ matrix.module_name }}"
            git push origin main
          fi

      - name: Create and push tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          version=$(grep '^version:' "${{ matrix.module_path }}/Chart.yaml" | awk '{print $2}')
          tag="${{ matrix.module_name }}-v${version}"
          git tag -f "$tag" -m "Release $tag"
          git push origin "$tag" --force
