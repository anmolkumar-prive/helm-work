name: Helm Chart Versioning & Tagging

on:
  pull_request:
    branches:
      - main
  pull_request_target:
    types: [closed]

permissions:
  contents: write
  pull-requests: write

env:
  HELM_VERSION: v3.10.0

jobs:
  generate-matrix:
    name: üßÆ Detect Changed Helm Charts
    runs-on: ubuntu-22.04
    outputs:
      matrix: ${{ steps.detect.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect Changed Chart Directories
        id: detect
        run: |
          echo "üîç Detecting changed Helm charts..."
          # When PR merge event (pull_request_target), diff main^ vs main
          if [ "${{ github.event_name }}" == "pull_request_target" ]; then
            BASE_BRANCH="origin/main^"
            HEAD_BRANCH="origin/main"
          else
            BASE_BRANCH="origin/main"
            HEAD_BRANCH="HEAD"
          fi

          list_changed_files=$(git diff --name-only $BASE_BRANCH...$HEAD_BRANCH)
          declare -a matrix
          for file in $list_changed_files; do
            dir=$(dirname "$file")
            if [ -f "$dir/Chart.yaml" ]; then
              module_name=$(basename "$dir")
              matrix+="{\"module_name\": \"$module_name\", \"module_path\": \"$dir\"},"
            fi
          done

          if [ -z "$matrix" ]; then
            echo "matrix={\"include\":[]}" >> $GITHUB_OUTPUT
            echo "No charts changed."
          else
            echo "matrix={\"include\":[${matrix%,}]}" >> $GITHUB_OUTPUT
            echo "‚úÖ Changed chart directories detected."
          fi

  preview:
    name: üß© Preview Helm Packaging (Show in PR)
    needs: [generate-matrix]
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: ${{ env.HELM_VERSION }}

      - name: üì¶ Package and Generate Index (Preview)
        run: |
          mkdir -p packages
          cd "${{ matrix.module_path }}"
          echo "üì¶ Packaging preview chart: ${{ matrix.module_name }}"

          # Package chart into shared /packages dir
          helm package . --destination ../../packages

          cd ../../packages

          # Merge with existing index.yaml if present
          if [ -f index.yaml ]; then
            helm repo index . --merge index.yaml --url https://example.com/charts
          else
            helm repo index . --url https://example.com/charts
          fi

          ls -l packages || true

      - name: üíæ Commit Preview Artifacts to PR Branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add packages/
          
          if ! git diff --cached --quiet; then
            git commit -m "üì¶ Preview Helm chart for ${{ matrix.module_name }}"
            git push origin HEAD:${{ github.head_ref }}
            echo "‚úÖ Preview package committed for ${{ matrix.module_name }}"
          else
            echo "‚ÑπÔ∏è No preview changes to commit."
          fi

  release:
    name: üöÄ Release Helm Charts (Post-Merge)
    needs: [generate-matrix]
    if: github.event_name == 'pull_request_target' && github.event.pull_request.merged == true
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main
          fetch-tags: true

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Extract chart version
        id: get_version
        run: |
          version=$(grep '^version:' "${{ matrix.module_path }}/Chart.yaml" | head -1 | sed 's/version:[[:space:]]*//')
          if [ -z "$version" ]; then
            echo "ERROR: Version not found in Chart.yaml"
            exit 1
          fi
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: üì¶ Package chart and update index
        run: |
          mkdir -p packages
          cd "${{ matrix.module_path }}"
          echo "üì¶ Packaging final chart: ${{ matrix.module_name }}"

          # Package chart with correct version
          helm package . --version "${{ steps.get_version.outputs.version }}" --destination ../../packages

          cd ../../packages

          # Merge with existing index.yaml if exists
          if [ -f index.yaml ]; then
            helm repo index . --merge index.yaml --url https://example.com/charts
          else
            helm repo index . --url https://example.com/charts
          fi

          ls -l

      - name: üíæ Commit packaged charts and index
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git

          git add packages/
          if ! git diff --cached --quiet; then
            git commit -m "üöÄ Release ${{ matrix.module_name }} v${{ steps.get_version.outputs.version }}"
            git push origin main
          else
            echo "No changes detected in packages/, skipping commit."
          fi

      - name: üè∑Ô∏è Create Git Tag (Chart Version)
        run: |
          chart_name=$(basename "${{ matrix.module_path }}")
          tag_name="${chart_name}-v${{ steps.get_version.outputs.version }}"

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

          if git rev-parse "$tag_name" >/dev/null 2>&1; then
            echo "‚ö†Ô∏è Tag ${tag_name} already exists. Skipping."
          else
            git tag -a "$tag_name" -m "Release $tag_name"
            git push origin "$tag_name"
            echo "‚úÖ Tag pushed: $tag_name"
          fi
