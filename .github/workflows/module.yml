name: Release Helm Chart

on:
  pull_request:
    branches: [main]
  pull_request_target:
    types: [closed]

permissions:
  contents: write
  pull-requests: write

env:
  HELM_VERSION: 3.10.0

jobs:

  # 1️⃣ Detect changed Helm charts
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.changed.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changed Helm charts
        id: changed
        run: |
          echo "Detecting changed Helm charts..."
          if [ "${{ github.event_name }}" == "pull_request_target" ]; then
            CHANGED_FILES=$(git diff --name-only HEAD^1...HEAD)
          else
            CHANGED_FILES=$(git diff --name-only origin/main...HEAD)
          fi

          MATRIX=""
          for file in $CHANGED_FILES; do
            dir=$(dirname "$file")
            if [ -f "$dir/Chart.yaml" ]; then
              module_name=$(echo "$dir" | tr '/' '_')
              MATRIX+="{\"module_name\": \"$module_name\", \"module_path\": \"$dir\"},"
            fi
          done

          if [ -z "$MATRIX" ]; then
            echo "matrix={\"include\":[]}" >> $GITHUB_OUTPUT
          else
            MATRIX="{\"include\":[$(echo "$MATRIX" | sed 's/,$//')]}"
            echo "matrix=$MATRIX" >> $GITHUB_OUTPUT
          fi

  # 2️⃣ In PR — Build charts, commit index & tgz to PR branch, and comment version diff
  verify-and-comment:
    name: Verify & Comment on Helm Chart
    needs: generate-matrix
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Lint and package Helm chart
        run: |
          mkdir -p packages
          helm lint "${{ matrix.module_path }}"
          helm package "${{ matrix.module_path }}" --destination packages
          helm repo index packages --merge packages/index.yaml || helm repo index packages

          mv packages/*.tgz packages/index.yaml ${{ matrix.module_path }}/

          echo "Helm package and index updated for ${{ matrix.module_name }}"

      - name: Commit packaged charts to PR branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add ${{ matrix.module_path }}/index.yaml ${{ matrix.module_path }}/*.tgz
          if ! git diff --cached --quiet; then
            git commit -m "Preview: update Helm package for ${{ matrix.module_name }}"
            git push origin HEAD:${{ github.head_ref }}
          else
            echo "No Helm packaging changes to commit."
          fi

      - name: Comment version change
        id: comment
        run: |
          old_ver=$(git show origin/main:"${{ matrix.module_path }}/Chart.yaml" 2>/dev/null | grep '^version:' | awk '{print $2}')
          new_ver=$(grep '^version:' "${{ matrix.module_path }}/Chart.yaml" | awk '{print $2}')
          echo "| Chart | Old | New |" > comment.txt
          echo "|-------|------|-----|" >> comment.txt
          echo "| ${{ matrix.module_name }} | ${old_ver:-N/A} | $new_ver |" >> comment.txt

      - name: Post comment to PR
        uses: thollander/actions-comment-pull-request@24bffb9b452ba05a4f3f77933840a6a841d1b32b
        with:
          file-path: comment.txt
          comment-tag: helm_version_check
          mode: recreate

  # 3️⃣ After merge — Commit and tag release
  release-and-tag:
    name: Release Helm Charts
    needs: generate-matrix
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request_target' && github.event.pull_request.merged == true
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Package chart for release
        run: |
          mkdir -p packages
          helm package "${{ matrix.module_path }}" --destination packages
          helm repo index packages --merge packages/index.yaml || helm repo index packages
          mv packages/*.tgz packages/index.yaml ${{ matrix.module_path }}/

      - name: Commit packaged charts to main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add ${{ matrix.module_path }}/index.yaml ${{ matrix.module_path }}/*.tgz
          if ! git diff --cached --quiet; then
            git commit -m "Release: update Helm package for ${{ matrix.module_name }}"
            git push origin main
          else
            echo "No Helm package changes to commit."
          fi

      - name: Create and push tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          version=$(grep '^version:' "${{ matrix.module_path }}/Chart.yaml" | awk '{print $2}')
          tag="${{ matrix.module_name }}-v${version}"
          git tag -f "$tag" -m "Release $tag"
          git push origin "$tag" --force
