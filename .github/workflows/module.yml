name: Helm Chart Package & Tag

on:
  pull_request:
    branches:
      - main
  pull_request_target:
    types: [closed]

permissions:
  contents: write
  pull-requests: write

env:
  HELM_VERSION: v3.10.0

jobs:
  generate-matrix:
    name: 🧮 Detect Changed Helm Charts
    runs-on: ubuntu-22.04
    outputs:
      matrix: ${{ steps.detect.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changed Helm chart directories
        id: detect
        run: |
          list_changed_files=$(git diff --name-only origin/main...HEAD)
          declare -a matrix
          for file in $list_changed_files; do
            dir=$(dirname "$file")
            if [ -f "$dir/Chart.yaml" ]; then
              module_name=$(basename "$dir")
              matrix+="{\"module_name\": \"$module_name\", \"module_path\": \"$dir\"},"
            fi
          done
          if [ -z "$matrix" ]; then
            echo "matrix={\"include\":[]}" >> $GITHUB_OUTPUT
          else
            echo "matrix={\"include\":[${matrix%,}]}" >> $GITHUB_OUTPUT
          fi

  # ------------------------------------------------------------------
  #  PHASE 1 — PREVIEW ON PR OPEN
  # ------------------------------------------------------------------
  preview-helm:
    name: 📦 Preview Helm Package
    needs: [generate-matrix]
    runs-on: ubuntu-22.04
    if: github.event_name == 'pull_request'
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Setup Helm
        uses: azure/setup-helm@v4
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Package Helm chart (preview)
        run: |
          echo "📦 Preview packaging: ${{ matrix.module_path }}"
          cd "${{ matrix.module_path }}"
          helm package .
          helm repo index --merge ../packages/index.yaml .
          mv ./*.tgz index.yaml ../packages/

      - name: Commit preview charts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd packages
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          if [[ -n "$(git status --porcelain)" ]]; then
            git add .
            git commit -m "📦 Preview Helm chart for ${{ matrix.module_name }}"
            git push origin HEAD:${{ github.head_ref }}
          else
            echo "No preview changes."
          fi

  # ------------------------------------------------------------------
  #  PHASE 2 — FINAL PACKAGE & TAG ON MERGE
  # ------------------------------------------------------------------
  release-helm:
    name: 🚀 Release Helm Chart & Create Tag
    needs: [generate-matrix]
    runs-on: ubuntu-22.04
    if: github.event.pull_request.merged == true
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          ref: main

      - name: Setup Helm
        uses: azure/setup-helm@v4
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Package final Helm chart
        run: |
          echo "🚀 Packaging final: ${{ matrix.module_path }}"
          cd "${{ matrix.module_path }}"
          helm package .
          helm repo index --merge ../packages/index.yaml .
          mv ./*.tgz index.yaml ../packages/

      - name: Commit final charts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd packages
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git

          if [[ -n "$(git status --porcelain)" ]]; then
            git add .
            git commit -m "🚀 Release Helm chart ${{ matrix.module_name }}"
            git push
          else
            echo "No final changes to commit."
          fi

      - name: 🏷️ Create Git Tag for Helm Chart
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          version=$(grep '^version:' "${{ matrix.module_path }}/Chart.yaml" | awk '{print $2}')
          chart_name=$(basename "${{ matrix.module_path }}")
          tag_name="${chart_name}-v${version}"

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git

          if git rev-parse "$tag_name" >/dev/null 2>&1; then
            echo "Tag ${tag_name} already exists. Skipping."
          else
            git tag -a "$tag_name" -m "Release ${tag_name}"
            git push origin "$tag_name"
            echo "✅ Created tag ${tag_name}"
          fi
