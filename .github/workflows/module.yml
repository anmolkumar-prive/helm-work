name: Helm Chart Versioning & Tagging

on:
  pull_request:
    branches:
      - main
  pull_request_target:
    types: [closed]

permissions:
  contents: write
  pull-requests: write

env:
  HELM_VERSION: v3.10.0

jobs:
  generate-matrix:
    name: üßÆ Detect Changed Helm Charts
    runs-on: ubuntu-22.04
    outputs:
      matrix: ${{ steps.detect.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect Changed Chart Directories
        id: detect
        run: |
          echo "üîç Detecting changed Helm charts..."
          # When PR merge event (pull_request_target), diff main^ vs main
          if [ "${{ github.event_name }}" == "pull_request_target" ]; then
            BASE_BRANCH="origin/main^"
            HEAD_BRANCH="origin/main"
          else
            BASE_BRANCH="origin/main"
            HEAD_BRANCH="HEAD"
          fi

          list_changed_files=$(git diff --name-only $BASE_BRANCH...$HEAD_BRANCH)
          declare -a matrix
          for file in $list_changed_files; do
            dir=$(dirname "$file")
            if [ -f "$dir/Chart.yaml" ]; then
              module_name=$(basename "$dir")
              matrix+="{\"module_name\": \"$module_name\", \"module_path\": \"$dir\"},"
            fi
          done

          if [ -z "$matrix" ]; then
            echo "matrix={\"include\":[]}" >> $GITHUB_OUTPUT
            echo "No charts changed."
          else
            echo "matrix={\"include\":[${matrix%,}]}" >> $GITHUB_OUTPUT
            echo "‚úÖ Changed chart directories detected."
          fi

  preview:
    name: üß© Preview Helm Packaging
    needs: [generate-matrix]
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - uses: azure/setup-helm@v4
        with:
          version: ${{ env.HELM_VERSION }}

      - name: üì¶ Package and Index (Preview)
        run: |
          mkdir -p packages
          cd "${{ matrix.module_path }}"
          echo "üì¶ Packaging chart: ${{ matrix.module_name }}"
          helm package . --destination ../../packages
          cd ../../packages
          helm repo index . --url https://example.com/charts

      - name: üíæ Commit Preview Artifacts
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add packages
          if ! git diff --cached --quiet; then
            git commit -m "üì¶ Preview Helm chart for ${{ matrix.module_name }}"
            git push origin HEAD:${{ github.head_ref }}
          else
            echo "No changes to commit."
          fi

  release:
    name: üöÄ Release Helm Charts (Post-Merge)
    needs: [generate-matrix]
    if: github.event_name == 'pull_request_target' && github.event.pull_request.merged == true
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main
          fetch-tags: true

      - uses: azure/setup-helm@v4
        with:
          version: ${{ env.HELM_VERSION }}

      - name: üì¶ Final Package and Index
        run: |
          mkdir -p packages
          cd "${{ matrix.module_path }}"
          echo "üì¶ Packaging final chart: ${{ matrix.module_name }}"
          helm package . --destination ../../packages
          cd ../../packages
          helm repo index . --url https://example.com/charts

      - name: üíæ Commit Final Chart Artifacts
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

          git add packages
          if ! git diff --cached --quiet; then
            git commit -m "üöÄ Release Helm chart ${{ matrix.module_name }}"
            git push origin main
          else
            echo "No changes to commit."
          fi

      - name: üè∑Ô∏è Create Git Tag (Chart Version)
        run: |
          version=$(grep '^version:' "${{ matrix.module_path }}/Chart.yaml" | awk '{print $2}')
          chart_name=$(basename "${{ matrix.module_path }}")
          tag_name="${chart_name}-v${version}"

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

          if git rev-parse "$tag_name" >/dev/null 2>&1; then
            echo "‚ö†Ô∏è Tag ${tag_name} already exists. Skipping."
          else
            git tag -a "$tag_name" -m "Release $tag_name"
            git push origin "$tag_name"
            echo "‚úÖ Tag pushed: $tag_name"
          fi
